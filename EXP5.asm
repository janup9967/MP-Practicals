
; Apply Assembly Language Programing to perform  string operations. (i)Accept, (ii) Display, (iii) Concatenation (iv) Compare


.MODEL SMALL
.STACK
.DATA
M1 DB,10,13," ENTER STRING 1:$"
M2 DB,10,13," ENTER LENGTH OF STR 1:$"
M3 DB,10,13," DISPLAY 1ST STRING:$"
M4 DB,10,13," ENTER STRING 2:$"
M5 DB,10,13," ENTER LENGTH OF STR 2:$"
M6 DB,10,13," DISPLAY 2ND STRING:$"
M7 DB,10,13," CONCATINATION OPERATION:$"
M8 DB,10,13," COMPARE OPERATION:$"
M9 DB,10,13," NOT EQUAL$"
M10 DB,10,13," EQUAL$"
STR1 DB 80,?,80 DUP(0)
STR2 DB 80,?,80 DUP(0)
LEN1 DB ?
LEN2 DB ?

.CODE
DISP MACRO XX
MOV AH,09
LEA DX,XX
INT 21H
ENDM

.STARTUP
DISP M1
MOV AH,0AH
LEA DX,STR1
INT 21H

DISP M2
LEA SI,STR1+1
MOV CL,[SI]
MOV LEN1,CL
ADD CL,30H
MOV DL,CL
MOV AH,02
INT 21H

DISP M3
MOV CL,LEN1
LEA SI,STR1+2
BACK:
MOV DL,[SI]
MOV AH,02
INT 21H
INC SI
DEC CL
JNZ BACK

DISP M4
MOV AH,0AH
LEA DX,STR2
INT 21H

DISP M5
LEA SI,STR2+1
MOV CL,[SI]
MOV LEN2,CL
ADD CL,30H
MOV DL,CL
MOV AH,02
INT 21H

DISP M6
MOV CL,LEN2
LEA SI,STR2+2
BACK1:
MOV DL,[SI]
MOV AH,02
INT 21H
INC SI
DEC CL
JNZ BACK1

DISP M8
LEA SI,STR1+2
LEA DI,STR2+2
MOV CL,LEN1
MOV CH,LEN2
CMP CL,CH
JNZ NE
BACK2:
MOV DL,[SI]
CMP DL,[DI]
JNZ NE
INC SI
INC DI
DEC CL
JNZ BACK2

DISP M10
DISP M7
JMP CONCATE
NE:
DISP M9
DISP M7
CONCATE:
LEA SI,STR1+2
LEA DI,STR2+2
MOV CL,LEN1
MOV CH,LEN2
BACK3:
INC SI
DEC CL
JNZ BACK3
BACK4:
MOV DL,[DI]
MOV [SI],DL
INC SI
INC DI
DEC CH
JNZ BACK4
MOV CL,LEN1
MOV CH,LEN2
ADD CL,CH
LEA SI,STR1+2
BACK5:
MOV DL,[SI]
MOV AH,02
INT 21H
INC SI
DEC CL
JNZ BACK5

.EXIT
END

